<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="sapbydesign"
       transports="https,http" statistics="disable" trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="username" expression="//username"/>
            <property name="password" expression="//password"/>
            <property name="sapHost" expression="//sapHost"/>
            <property name="blocking" expression="//blocking"/>
            <property name="callTimeout" expression="//callTimeout"/>
            <property name="basicMessageHeader" expression="//basicMessageHeader/*"/>
            <property name="customerAccountObject" expression="//customerAccountObject/*"/>
            <property name="salesOrderObject" expression="//salesOrderObject/*"/>
            <property name="queryObject" expression="//queryObject/*"/>
            <property name="processingConditionsObject" expression="//processingConditionsObject/*"/>
            <property name="requestedElementsObject" expression="//requestedElementsObject/*"/>
            <property name="planningObject" expression="//planningObject/*"/>
            <property name="scopeOfCheckIndicator" expression="//scopeOfCheckIndicator"/>
            <property name="availabilityDeterminationDuration" expression="//availabilityDeterminationDuration"/>
            <property name="includeOpenOrders" expression="//includeOpenOrders"/>
            <property name="includeOpenAndInPreparationOrders" expression="//includeOpenAndInPreparationOrders"/>
            <property name="outboundDeliveryObject" expression="//outboundDeliveryObject/*"/>
            <property name="transportAction" expression="$trp:Action"/>
            <property name="method" expression="//method/text()"/>
            <sapbydesign.init>
                <username>{$ctx:username}</username>
                <password>{$ctx:password}</password>
                <sapHost>{$ctx:sapHost}</sapHost>
                <blocking>{$ctx:blocking}</blocking>
                <callTimeout>{$ctx:callTimeout}</callTimeout>
            </sapbydesign.init>
            <switch source="get-property('method')">
                <case regex="checkCustomerAccountsMaintenance">
                    <sapbydesign.checkCustomerAccountsMaintenance>
                        <basicMessageHeader>{$ctx:basicMessageHeader}</basicMessageHeader>
                        <customerAccountObject>{$ctx:customerAccountObject}</customerAccountObject>
                    </sapbydesign.checkCustomerAccountsMaintenance>
                </case>
                <case regex="maintainCustomerAccounts">
                    <sapbydesign.maintainCustomerAccounts>
                        <basicMessageHeader>{$ctx:basicMessageHeader}</basicMessageHeader>
                        <customerAccountObject>{$ctx:customerAccountObject}</customerAccountObject>
                    </sapbydesign.maintainCustomerAccounts>
                </case>
                <case regex="queryCustomerByCommunicationData">
                    <sapbydesign.queryCustomerByCommunicationData>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                        <requestedElementsObject>{$ctx:requestedElementsObject}</requestedElementsObject>
                    </sapbydesign.queryCustomerByCommunicationData>
                </case>
                <case regex="queryCustomerByElements">
                    <sapbydesign.queryCustomerByElements>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                        <requestedElementsObject>{$ctx:requestedElementsObject}</requestedElementsObject>
                    </sapbydesign.queryCustomerByElements>
                </case>
                <case regex="queryCustomerByIdentification">
                    <sapbydesign.queryCustomerByIdentification>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                        <requestedElementsObject>{$ctx:requestedElementsObject}</requestedElementsObject>
                    </sapbydesign.queryCustomerByIdentification>
                </case>
                <case regex="checkSalesOrdersMaintenance">
                    <sapbydesign.checkSalesOrdersMaintenance>
                        <basicMessageHeader>{$ctx:basicMessageHeader}</basicMessageHeader>
                        <salesOrderObject>{$ctx:salesOrderObject}</salesOrderObject>
                    </sapbydesign.checkSalesOrdersMaintenance>
                </case>
                <case regex="determineAvailabilityOfProducts">
                    <sapbydesign.determineAvailabilityOfProducts>
                        <planningObject>{$ctx:planningObject}</planningObject>
                        <scopeOfCheckIndicator>{$ctx:scopeOfCheckIndicator}</scopeOfCheckIndicator>
                        <availabilityDeterminationDuration>{$ctx:availabilityDeterminationDuration}</availabilityDeterminationDuration>
                    </sapbydesign.determineAvailabilityOfProducts>
                </case>
                <case regex="maintainSalesOrders">
                    <sapbydesign.maintainSalesOrders>
                        <basicMessageHeader>{$ctx:basicMessageHeader}</basicMessageHeader>
                        <salesOrderObject>{$ctx:salesOrderObject}</salesOrderObject>
                    </sapbydesign.maintainSalesOrders>
                </case>
                <case regex="queryAccountOpenAmounts">
                    <sapbydesign.queryAccountOpenAmounts>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                        <includeOpenOrders>{$ctx:includeOpenOrders}</includeOpenOrders>
                        <includeOpenAndInPreparationOrders>{$ctx:includeOpenAndInPreparationOrders}</includeOpenAndInPreparationOrders>
                    </sapbydesign.queryAccountOpenAmounts>
                </case>
                <case regex="queryMaterials">
                    <sapbydesign.queryMaterials>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                        <requestedElementsObject>{$ctx:requestedElementsObject}</requestedElementsObject>
                    </sapbydesign.queryMaterials>
                </case>
                <case regex="queryOutboundDeliverables">
                    <sapbydesign.queryOutboundDeliverables>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                    </sapbydesign.queryOutboundDeliverables>
                </case>
                <case regex="querySalesOrders">
                    <sapbydesign.querySalesOrders>
                        <queryObject>{$ctx:queryObject}</queryObject>
                        <processingConditionsObject>{$ctx:processingConditionsObject}</processingConditionsObject>
                        <requestedElementsObject>{$ctx:requestedElementsObject}</requestedElementsObject>
                    </sapbydesign.querySalesOrders>
                </case>
                <case regex="readOutboundDeliverables">
                    <sapbydesign.readOutboundDeliverables>
                        <outboundDeliveryObject>{$ctx:outboundDeliveryObject}</outboundDeliveryObject>
                    </sapbydesign.readOutboundDeliverables>
                </case>
            </switch>
            <respond/>
        </inSequence>
    </target>
    <description/>
</proxy>